FROM ghcr.io/linuxserver/baseimage-alpine:arm64v8-3.13 as migration-bins

RUN \
 echo "**** install buid packages ****" && \
 apk add --no-cache \
	curl \
	gcc \
	git \
	go \
	musl-dev && \
 echo "**** build fs-repo-migrations ****" && \
 mkdir /bins && \
 IPFSMIG_VERSION=$(curl -sX GET "https://api.github.com/repos/ipfs/fs-repo-migrations/releases/latest" \
	| awk '/tag_name/{print $4;exit}' FS='[""]') && \
 git clone https://github.com/ipfs/fs-repo-migrations.git && \
 cd fs-repo-migrations && \
 git checkout ${IPFSMIG_VERSION} && \
 for BUILD in fs-repo-migrations fs-repo-9-to-10 fs-repo-10-to-11; do \
	cd ${BUILD} && \
	go build && \
	mv fs-repo-* /bins/ && \
	cd .. ; \
 done
 
FROM ghcr.io/linuxserver/baseimage-alpine:arm64v8-3.13

# set version label
ARG BUILD_DATE
ARG VERSION
ARG IPFSWEB_VERSION
LABEL build_version="Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}"
LABEL maintainer="thelamer"

# environment
ENV IPFS_PATH=/config/ipfs

RUN \
 echo "**** install runtime packages ****" && \
 apk add --no-cache \
	curl \
	logrotate \
	nginx \
	openssl \
	php7 \
	php7-fpm && \
 apk add --no-cache --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community \
	go-ipfs && \
 echo "**** install ipfs web-ui ****" && \
 mkdir -p /var/www/html/ && \
 if [ -z ${IPFSWEB_VERSION+x} ]; then \
	IPFSWEB_VERSION=$(curl -sX GET "https://api.github.com/repos/ipfs/ipfs-webui/releases/latest" \
	| awk '/tag_name/{print $4;exit}' FS='[""]'); \
 fi && \
 curl -o \
	/tmp/ipfswebui.tar.gz -L \
	"https://github.com/ipfs/ipfs-webui/releases/download/${IPFSWEB_VERSION}/ipfs-webui.tar.gz" && \
 tar xf \
 /tmp/ipfswebui.tar.gz -C \
	/var/www/html/ --strip-components=1 && \
 echo "**** configure nginx ****" && \
 echo 'fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;' >> \
	/etc/nginx/fastcgi_params && \
 rm -f /etc/nginx/conf.d/default.conf && \
 echo "**** fix logrotate ****" && \
 sed -i "s#/var/log/messages {}.*# #g" /etc/logrotate.conf && \
 sed -i 's#/usr/sbin/logrotate /etc/logrotate.conf#/usr/sbin/logrotate /etc/logrotate.conf -s /config/log/logrotate.status#g' \
	/etc/periodic/daily/logrotate && \
 echo "**** cleanup ****" && \
 rm -rf \
	/tmp/*

# copy files
COPY root/ /
COPY --from=migration-bins /bins /usr/bin

# ports and volumes
EXPOSE 80 443 4001 5001 8080
VOLUME ["/config"]
